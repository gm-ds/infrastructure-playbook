---
# NOTE: Use dashes (-) exclusively for tags and underscores (_) exclusively for destinations.
# submit_request_cpus its called in pulsar and in plain condor only request_cpus
destinations:
  ######################
  # BASIC DESTINATIONS #
  ######################
  basic_docker_destination:
    abstract: true
    params:
      docker_enabled: true
      docker_sudo: false
      docker_net: bridge
      docker_auto_rm: true
      docker_set_user: ""
      # $defaults expands to "$galaxy_root:ro,$tool_directory:ro,$job_directory:ro,$working_directory:rw,$default_file_path:rw"
      docker_volumes: "$_CONDOR_SCRATCH_DIR:rw,$defaults,/cvmfs/data.galaxyproject.org:ro"
      require_container: true
      submit_request_cpus: "{cores}"
      submit_request_memory: "{mem}G"
      outputs_to_working_directory: false
      container_monitor_result: callback
      submit_requirements: "GalaxyDockerHack == True"

  basic_singularity_destination:
    abstract: true
    params:
      submit_request_cpus: "{cores}"
      submit_request_memory: "{mem}G"
      singularity_enabled: true
      singularity_volumes: '$_CONDOR_SCRATCH_DIR:rw,$job_directory:rw,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/cvmfs/data.galaxyproject.org:ro'
      singularity_default_container_id: "/cvmfs/singularity.galaxyproject.org/all/centos:8.3.2011"

  ################################
  # EMBEDDED PULSAR DESTINATIONS #
  ################################

  interactive_pulsar:
    inherits: basic_docker_destination
    runner: pulsar_embedded
    max_accepted_cores: 24
    max_accepted_mem: 128
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    scheduling:
      accept:
        - docker
      require:
        - interactive

  interactive_pulsar_gpu:
    inherits: interactive_pulsar
    min_accepted_gpus: 1
    max_accepted_gpus: 1
    env:
      GPU_AVAILABLE: "1"
    params:
      requirements: 'GalaxyGroup == "compute_gpu"'

  embedded_pulsar_docker:
    inherits: basic_docker_destination
    runner: pulsar_embedded
    max_accepted_cores: 24
    max_accepted_mem: 128
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    scheduling:
      require:
        - docker
        - embedded-pulsar

  embedded_pulsar_docker_gpu:
    inherits: embedded_pulsar_docker
    min_accepted_gpus: 1
    max_accepted_gpus: 1
    env:
      GPU_AVAILABLE: "1"
    params:
      requirements: 'GalaxyGroup == "compute_gpu"'

  #######################
  # PULSAR DESTINATIONS #
  #######################

  pulsar_default: # use for remote Pulsar nodes and ALWAYS overwrite the runner.
    abstract: true
    runner: pulsar_embedded
    env:
      LC_ALL: C
      SINGULARITY_CACHEDIR: /data/share/var/database/container_cache # On the NFS share on remote Pulsar side
    params:
      jobs_directory: /data/share/staging
      transport: curl
      remote_metadata: false
      metadata_strategy: directory
      default_file_action: remote_transfer
      rewrite_parameters: true
      persistence_directory: /data/share/persisted_data
      outputs_to_working_directory: false
      dependency_resolution: "none"
      submit_request_cpus: "{cores}"
      submit_request_memory: "{mem}"
      # $defaults expands to "$galaxy_root:ro,$tool_directory:ro,$job_directory:ro,$working_directory:rw,$default_file_path:rw"
      docker_volumes: "$defaults,/cvmfs/data.galaxyproject.org:ro"
      singularity_enabled: true
      singularity_volumes: "$defaults,/cvmfs/data.galaxyproject.org:ro"
    scheduling:
      accept:
        - pulsar
        - conda
        - singularity
        - docker
        - condor-tpv

  #  pulsar_mira_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_mira_runner
  #   max_accepted_cores: 8
  #   max_accepted_mem: 15
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - mira-pulsar

  # pulsar_sanjay_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_sanjay_runner
  #   max_accepted_cores: 8
  #   max_accepted_mem: 15
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - sanjay-pulsar

  # pulsar_sk01_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_eu_sk01
  #   max_accepted_cores: 8
  #   max_accepted_mem: 16
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - sk-pulsar

  # pulsar_it_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_eu_it01
  #   max_accepted_cores: 16
  #   max_accepted_mem: 31
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - it-pulsar

  # pulsar_it02_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_eu_it02
  #   max_accepted_cores: 16
  #   max_accepted_mem: 31
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - it02-pulsar

  pulsar_it03_tpv:
    inherits: pulsar_default
    runner: pulsar_it03
    max_accepted_cores: 32
    max_accepted_mem: 64
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    params:
      singularity_volumes: '$job_directory:rw,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/cvmfs/data.galaxyproject.org:ro'
    env:
      TMP: $_GALAXY_JOB_TMP_DIR
      TEMP: $_GALAXY_JOB_TMP_DIR
      TMPDIR: $_GALAXY_JOB_TMP_DIR
    scheduling:
      require:
        - it03-pulsar
        
  pulsar_it05_tpv:
    inherits: pulsar_default
    runner: pulsar_it05
    max_accepted_cores: 4
    max_accepted_mem: 20
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    scheduling:
      require:
        - it05-pulsar

    params:
      singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/u/b/ubuntu:20.04'
      singularity_volumes: '$job_directory:rw,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/cvmfs/data.galaxyproject.org:ro'

  # pulsar_fr01_tpv:
  #   runner: pulsar_eu_fr01
  #   inherits: pulsar_default
  #   max_accepted_cores: 8
  #   max_accepted_mem: 63
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - fr-pulsar

  # pulsar_be_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_eu_be01
  #   max_accepted_cores: 8
  #   max_accepted_mem: 15
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   scheduling:
  #     require:
  #       - be-pulsar

  # pulsar_cz01_tpv:
  #   inherits: pulsar_default
  #   runner: pulsar_eu_cz01
  #   max_accepted_cores: 32
  #   max_accepted_mem: 128
  #   min_accepted_gpus: 0
  #   max_accepted_gpus: 0
  #   env:
  #     LC_ALL: C
  #     SINGULARITY_CACHEDIR: "/storage/praha5-elixir/home/galaxyeu/singularity"
  #     SINGULARITY_TMPDIR: "/storage/praha5-elixir/home/galaxyeu/singularity/tmp"
  #     TMPDIR: "$SCRATCHDIR"
  #     TMP: "$SCRATCHDIR"
  #     TEMP: "$SCRATCHDIR"
  #   params:
  #     jobs_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-eu/files/staging"
  #     persistence_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-eu/files/persistent"
  #     singularity_volumes: "$job_directory:rw,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/cvmfs/data.galaxyproject.org:ro,$SCRATCHDIR,/storage/praha5-elixir/home/galaxyeu:/home/galaxyeu"
  #   scheduling:
  #     require:
  #       - cz-pulsar



  #############################
  # LOCAL CONDOR DESTINATIONS #
  #############################

  condor_docker:
    inherits: basic_docker_destination
    runner: condor
    max_accepted_cores: 36
    max_accepted_mem: 975
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    scheduling:
      require:
        - docker

  condor_singularity:
    inherits: basic_singularity_destination
    runner: condor
    max_accepted_cores: 24
    max_accepted_mem: 128
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    params:
    scheduling:
      require:
        - singularity

  # Generic destination for tools that don't get any params
  # and no specified dependency resolution
  condor_tpv:
    runner: condor
    max_accepted_cores: 64
    max_accepted_mem: 1000
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    scheduling:
      prefer:
        - condor-tpv

  condor_singularity_with_conda:
    inherits: basic_singularity_destination
    runner: condor
    max_accepted_cores: 64
    max_accepted_mem: 1000
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    params:
      container_override:
        - type: singularity
          shell: "/bin/bash"
          resolve_dependencies: true
          identifier: "/data/0/singularity_base_images/centos:8.3.2011"
    scheduling:
      require:
        - singularity
        - conda

  condor_upload:
    runner: condor
    max_accepted_cores: 20
    max_accepted_mem: 10
    min_accepted_gpus: 0
    max_accepted_gpus: 0
    params:
      requirements: "GalaxyTraining == false"
      rank: 'GalaxyGroup == "upload"'
    scheduling:
      require:
        - upload
      accept:
        - pulsar
        - it-pulsar

  condor_gpu:
    runner: condor
    max_accepted_cores: 8
    max_accepted_mem: 16
    min_accepted_gpus: 1
    max_accepted_gpus: 1
    env:
      GPU_AVAILABLE: 1
    params:
      requirements: 'GalaxyGroup == "compute_gpu"'
